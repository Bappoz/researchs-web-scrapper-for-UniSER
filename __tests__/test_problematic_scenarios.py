#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import json

def test_problematic_scenario():
    print("üß™ Testando cen√°rios problem√°ticos de H-index...")
    
    # Vamos testar se o problema pode estar na interface do usu√°rio
    # Criando um cen√°rio onde os valores poderiam ser confundidos
    
    api_url = 'http://localhost:8000/search/author/profile'
    
    # Teste com perfil diferente que pode ter valores problem√°ticos
    test_profiles = [
        {
            "name": "Teste com Geoffrey Hinton",
            "url": "https://scholar.google.com/citations?user=JicYPdAAAAAJ"
        },
        {
            "name": "Teste com Yann LeCun", 
            "url": "https://scholar.google.com/citations?user=WLN3QrAAAAAJ"
        }
    ]
    
    for profile in test_profiles:
        print(f"\n{'='*60}")
        print(f"TESTANDO: {profile['name']}")
        print(f"URL: {profile['url']}")
        print(f"{'='*60}")
        
        params = {
            'query': profile['name'],
            'platforms': 'scholar',
            'profile_url': profile['url'],
            'export_excel': False
        }
        
        try:
            print("üì° Fazendo requisi√ß√£o...")
            response = requests.get(api_url, params=params, timeout=60)
            
            if response.status_code == 200:
                data = response.json()
                
                print("‚úÖ DADOS RECEBIDOS:")
                
                # Verificar estrutura researcher_info
                if 'researcher_info' in data:
                    info = data['researcher_info']
                    
                    name = info.get('name', 'N/A')
                    h_index = info.get('h_index', 'N/A')
                    citations = info.get('total_citations', 'N/A')
                    institution = info.get('institution', 'N/A')
                    
                    print(f"üìã RESULTADO:")
                    print(f"  Nome: {name}")
                    print(f"  H-index: {h_index}")
                    print(f"  Cita√ß√µes: {citations}")
                    print(f"  Institui√ß√£o: {institution}")
                    
                    # An√°lise de poss√≠veis problemas
                    print(f"\nüîç AN√ÅLISE DE PROBLEMAS:")
                    
                    try:
                        h_val = int(str(h_index).replace(',', ''))
                        cit_val = int(str(citations).replace(',', ''))
                        
                        print(f"  H-index (n√∫mero): {h_val:,}")
                        print(f"  Cita√ß√µes (n√∫mero): {cit_val:,}")
                        print(f"  Raz√£o H/Cita√ß√µes: {h_val/cit_val:.4f}")
                        
                        # Verifica√ß√µes de problemas
                        problems = []
                        
                        if h_val == cit_val:
                            problems.append("‚ùå H-index IGUAL √†s cita√ß√µes!")
                        
                        if h_val > 1000:
                            problems.append("‚ùå H-index MUITO ALTO (>1000)")
                        
                        if h_val > cit_val:
                            problems.append("‚ùå H-index MAIOR que cita√ß√µes")
                        
                        if h_val > cit_val * 0.1:
                            problems.append("‚ö†Ô∏è H-index suspeito (>10% das cita√ß√µes)")
                        
                        if str(h_index) == str(citations):
                            problems.append("‚ùå H-index STRING igual √† cita√ß√µes STRING")
                        
                        if len(problems) > 0:
                            print(f"\nüö® PROBLEMAS DETECTADOS:")
                            for problem in problems:
                                print(f"  {problem}")
                        else:
                            print(f"\n‚úÖ H-index parece v√°lido")
                            
                        # Verificar se pode haver confus√£o na interface
                        print(f"\nüé≠ SIMULA√á√ÉO DE INTERFACE:")
                        print(f"  Como apareceria na tela:")
                        print(f"    H-Index: {h_index}")
                        print(f"    Cita√ß√µes: {citations}")
                        
                        if len(str(h_index)) == len(str(citations)):
                            print(f"  ‚ö†Ô∏è AVISO: Mesmo n√∫mero de d√≠gitos! Usu√°rio pode confundir.")
                        
                    except Exception as e:
                        print(f"  ‚ùå Erro na an√°lise num√©rica: {e}")
                
                else:
                    print("‚ùå researcher_info n√£o encontrado!")
                    print(f"Chaves dispon√≠veis: {list(data.keys())}")
            
            else:
                print(f"‚ùå Erro HTTP {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå Erro na requisi√ß√£o: {e}")

if __name__ == "__main__":
    test_problematic_scenario()